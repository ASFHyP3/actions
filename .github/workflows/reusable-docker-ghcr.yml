on:
  workflow_call:
    inputs:
      version_tag:
        required: true
        type: string
      release_branch:
        required: false
        default: main
        type: string
      develop_branch:
        required: false
        default: develop
        type: string
      user:
        required: false
        default: tools-bot
        type: string
    secrets:
      USER_TOKEN:
        required: true

jobs:
  dockerize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: set environment variables
        run: |
          echo "CI_JOB_TIMESTAMP=$(date --utc --rfc-3339=seconds)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ inputs.user }}
          password: ${{ secrets.USER_TOKEN }}

      - name: Lowercase repo for container registry
        run: |
          echo "REPO=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}

      - name: Build, tag, and push image to GitHub Container Registry
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.REPO }}:${{ inputs.version_tag }}
          labels: |
            org.opencontainers.image.created=${{ env.CI_JOB_TIMESTAMP }}
            org.opencontainers.image.version=${{ inputs.version_tag }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Add test tag
        if: github.ref == format('refs/heads/{0}', inputs.develop_branch)
        uses: akhilerm/tag-push-action@v2.1.0
        with:
          src: ghcr.io/${{ env.REPO }}:${{ inputs.version_tag }}
          dst: ghcr.io/${{ env.REPO }}:test

      - name: Add latest tag
        if: github.ref == format('refs/heads/{0}', inputs.release_branch)
        uses: akhilerm/tag-push-action@v2.1.0
        with:
          src: ghcr.io/${{ env.REPO }}:${{ inputs.version_tag }}
          dst: ghcr.io/${{ env.REPO }}:latest
