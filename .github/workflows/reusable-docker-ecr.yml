on:
  workflow_call:
    inputs:
      version_tag:
        required: true
        type: string
      ecr_registry:
        required: true
        type: string
      aws_region:
        required: false
        default: us-west-2
        type: string
      develop_branch:
        required: false
        default: develop
        type: string
      file:
        required: false
        default: Dockerfile
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

concurrency:
  group: ${{ inputs.version_tag }}
  cancel-in-progress: true

jobs:
  dockerize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: set environment variables
        run: |
          echo "CI_JOB_TIMESTAMP=$(date --utc --rfc-3339=seconds)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws_region }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Lowercase repo for container registry
        run: |
          echo "REPO=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}

      - name: Build, tag, and push image to Amazon ECR
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./${{ inputs.file }}
          push: ${{ ! github.event.pull_request.head.repo.fork }}
          tags: |
            ${{ inputs.ecr_registry }}/${{ env.REPO }}:${{ inputs.version_tag }}
          labels: |
            org.opencontainers.image.created=${{ env.CI_JOB_TIMESTAMP }}
            org.opencontainers.image.version=${{ inputs.version_tag }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Add test tag
        if: ${{ github.event_name != 'pull_request' && contains(inputs.version_tag, '.dev') }}
        uses: akhilerm/tag-push-action@v2.2.0
        with:
          src: ${{ inputs.ecr_registry }}/${{ env.REPO }}:${{ inputs.version_tag }}
          dst: ${{ inputs.ecr_registry }}/${{ env.REPO }}:test

      - name: Add latest tag
        if: ${{ github.event_name != 'pull_request' && ! contains(inputs.version_tag, '.dev') }}
        uses: akhilerm/tag-push-action@v2.2.0
        with:
          src: ${{ inputs.ecr_registry }}/${{ env.REPO }}:${{ inputs.version_tag }}
          dst: ${{ inputs.ecr_registry }}/${{ env.REPO }}:latest

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ inputs.ecr_registry }}
